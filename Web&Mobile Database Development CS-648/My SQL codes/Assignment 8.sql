/*
Hsuan Yu Liu
823327369
CS 648
Assignment 8
*/

-- -----------------------------------------------------
-- Chapter 10 Q3
-- -----------------------------------------------------

-- MySQL Script generated by MySQL Workbench
-- Thu Apr 18 22:29:54 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL DEFAULT 'TBD',
  `last_name` VARCHAR(45) NULL DEFAULT 'TBD',
  `email_address` VARCHAR(100) NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`downloads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`downloads` (
  `download_id` INT NOT NULL,
  `user_id` INT NULL,
  `download_date` DATETIME NULL,
  `filename` VARCHAR(64) NULL,
  `product_id` INT NULL,
  PRIMARY KEY (`download_id`),
  UNIQUE INDEX `download_id_UNIQUE` (`download_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`products` (
  `product_id` INT NOT NULL,
  `product_name` VARCHAR(64) NOT NULL DEFAULT 'TBD',
  PRIMARY KEY (`product_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_to_download`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_to_download` (
  `utod_id` INT NOT NULL,
  `user_id` INT NULL,
  `download_id` INT NULL,
  PRIMARY KEY (`utod_id`),
  INDEX `utod_fk_users_idx` (`user_id` ASC) VISIBLE,
  INDEX `utod_fk_downloads_idx` (`download_id` ASC) VISIBLE,
  CONSTRAINT `utod_fk_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `utod_fk_downloads`
    FOREIGN KEY (`download_id`)
    REFERENCES `mydb`.`downloads` (`download_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`product_to_download`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`product_to_download` (
  `ptod_id` INT NOT NULL,
  `product_id` INT NULL,
  `download_id` INT NULL,
  PRIMARY KEY (`ptod_id`),
  INDEX `ptod_fk_downloads_idx` (`download_id` ASC) VISIBLE,
  INDEX `ptod_fk_products_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `ptod_fk_downloads`
    FOREIGN KEY (`download_id`)
    REFERENCES `mydb`.`downloads` (`download_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ptod_fk_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- -------------------------------------------------------------------
-- Chapter 12 and 13
-- -------------------------------------------------------------------

USE my_guitar_shop; 

-- Exercises 12-1
DROP VIEW IF EXISTS customer_addresses;

CREATE VIEW customer_addresses AS
SELECT c.customer_id ,
	c.email_address,
	c.last_name ,
	c.first_name ,
	bill_addr.line1 AS bill_line1 ,
	bill_addr.line2 AS bill_line2,
	bill_addr.city AS bill_city ,
	bill_addr.state AS bill_state ,
	bill_addr.zip_code AS bill_zip ,
	ship_addr.line1 AS ship_line1 ,
	ship_addr.line2 AS ship_line2 ,
	ship_addr.city AS ship_city ,
	ship_addr.state AS ship_state ,
	ship_addr.zip_code AS ship_zip
FROM customers c ,
	addresses bill_addr, 
    addresses ship_addr
WHERE c.billing_address_id= bill_addr.address_id 
	AND c.shipping_address_id = ship_addr.address_id
ORDER BY c.last_name, 
	c.first_name
;

DROP VIEW IF EXISTS customer_addresses2;
CREATE VIEW customer_addresses2 AS
SELECT c.customer_id ,
	c.email_address,
	c.last_name ,
	c.first_name ,
	bill_addr.line1 AS bill_line1 ,
	bill_addr.line2 AS bill_line2,
	bill_addr.city AS bill_city ,
	bill_addr.state AS bill_state ,
	bill_addr.zip_code AS bill_zip ,
	ship_addr.line1 AS ship_line1 ,
	ship_addr.line2 AS ship_line2 ,
	ship_addr.city AS ship_city ,
	ship_addr.state AS ship_state ,
	ship_addr.zip_code AS ship_zip
FROM customers c
	JOIN addresses bill_addr
		ON bill_addr.customer_id = c.customer_id AND c.billing_address_id= bill_addr.address_id 
	JOIN addresses ship_addr
		ON ship_addr.customer_id = c.customer_id AND c.shipping_address_id= ship_addr.address_id 
ORDER BY c.last_name, 
	c.first_name
;


SELECT * FROM customer_addresses;
SELECT * FROM customer_addresses2;

-- Exercise 13-2
DROP PROCEDURE IF EXISTS test;

DELIMITER //
CREATE PROCEDURE test()
BEGIN
	DECLARE product_count INT;
	DECLARE price_average DECIMAL(9,4);
	
    SELECT COUNT(*)
    INTO product_count
    FROM products
    ;
    
    SELECT AVG(list_price)
    INTO price_average
    FROM products
    ;
    
    IF product_count >=7 THEN
		SELECT product_count
			, price_average
        ;
	ELSE
		SELECT "The number of products is less than 7" 
			AS message
		;
    END IF;        
END//

DELIMITER ;

CALL test();

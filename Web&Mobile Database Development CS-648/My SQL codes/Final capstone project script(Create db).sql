/*
Hsuan Yu Liu
823327369
CS 648
Final Capstone Project script
*/


/********************************************************
* Create a database named rfid_store_db
*********************************************************/
-- MySQL Script generated by MySQL Workbench
-- Mon May  6 02:40:22 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema RFID_store_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `RFID_store_db` ;

-- -----------------------------------------------------
-- Schema RFID_store_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `RFID_store_db` ;
USE `RFID_store_db` ;

-- -----------------------------------------------------
-- Table `Customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Customers` ;

CREATE TABLE IF NOT EXISTS `Customers` (
  `Customer_Id` INT NOT NULL AUTO_INCREMENT,
  `RFID_ID` VARCHAR(45) NOT NULL,
  `password` VARBINARY(255) NOT NULL DEFAULT '0000',
  `e_mail` VARCHAR(128) NULL,
  `phone_number` VARCHAR(45) NULL,
  PRIMARY KEY (`Customer_Id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Customer_Id_UNIQUE` ON `Customers` (`Customer_Id` ASC) VISIBLE;

CREATE UNIQUE INDEX `RFID_ID_UNIQUE` ON `Customers` (`RFID_ID` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Ways_to_pay`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Ways_to_pay` ;

CREATE TABLE IF NOT EXISTS `Ways_to_pay` (
  `payment_way_Id` INT NOT NULL AUTO_INCREMENT,
  `payment_way` VARCHAR(32) NOT NULL DEFAULT 'Cash',
  PRIMARY KEY (`payment_way_Id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `payment_way_UNIQUE` ON `Ways_to_pay` (`payment_way_Id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Receipts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Receipts` ;

CREATE TABLE IF NOT EXISTS `Receipts` (
  `Receipt_Id` INT NOT NULL AUTO_INCREMENT,
  `Customer_Id` INT NOT NULL,
  `sum_of_price` DECIMAL(9,2) UNSIGNED NOT NULL DEFAULT 0.00,
  `payment_way_Id` INT NULL DEFAULT 0,
  `date` DATE NULL,
  PRIMARY KEY (`Receipt_Id`),
  CONSTRAINT `receipt_fk_payment`
    FOREIGN KEY (`payment_way_Id`)
    REFERENCES `Ways_to_pay` (`payment_way_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `receipt_fk_payment_idx` ON `Receipts` (`payment_way_Id` ASC) VISIBLE;

CREATE UNIQUE INDEX `Receipt_Id_UNIQUE` ON `Receipts` (`Receipt_Id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Categories` ;

CREATE TABLE IF NOT EXISTS `Categories` (
  `category_Id` INT NOT NULL,
  `category` VARCHAR(64) NOT NULL DEFAULT 'TBD',
  PRIMARY KEY (`category_Id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `catefory_UNIQUE` ON `Categories` (`category_Id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `NutritionFacts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NutritionFacts` ;

CREATE TABLE IF NOT EXISTS `NutritionFacts` (
  `NutritionFacts_Id` INT NOT NULL AUTO_INCREMENT,
  `serving_size` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `serving_per_container` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `calories` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `saturated_fat` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `trans_fat` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `sodium` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `potassium` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `cholesterol` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `dietary_fiber` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  `sugars` DECIMAL(6,2) UNSIGNED NULL DEFAULT 0.0,
  PRIMARY KEY (`NutritionFacts_Id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `NutritionFacts_Id_UNIQUE` ON `NutritionFacts` (`NutritionFacts_Id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Products` ;

CREATE TABLE IF NOT EXISTS `Products` (
  `Product_Id` INT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(128) NOT NULL,
  `price` DECIMAL(9,2) NOT NULL DEFAULT 0.00,
  `ingredients` VARCHAR(1024) NULL,
  `category_Id` INT NOT NULL DEFAULT 1,
  `NutritionFacts_Id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`Product_Id`),
  CONSTRAINT `products_fk_categories`
    FOREIGN KEY (`category_Id`)
    REFERENCES `Categories` (`category_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `products_fk_nutritionfacts`
    FOREIGN KEY (`NutritionFacts_Id`)
    REFERENCES `NutritionFacts` (`NutritionFacts_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `product_name_UNIQUE` ON `Products` (`product_name` ASC) VISIBLE;

CREATE INDEX `products_fk_nutritionfacts_idx` ON `Products` (`NutritionFacts_Id` ASC) VISIBLE;

CREATE INDEX `products_fk_categories_idx` ON `Products` (`category_Id` ASC) VISIBLE;

CREATE UNIQUE INDEX `Product_Id_UNIQUE` ON `Products` (`Product_Id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Customers_to_Receipts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Customers_to_Receipts` ;

CREATE TABLE IF NOT EXISTS `Customers_to_Receipts` (
  `CToR_Id` INT NOT NULL AUTO_INCREMENT,
  `Customer_Id` INT NOT NULL,
  `Receipt_Id` INT NOT NULL,
  PRIMARY KEY (`CToR_Id`),
  CONSTRAINT `CToR_fk_customers`
    FOREIGN KEY (`Customer_Id`)
    REFERENCES `Customers` (`Customer_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `CToR_fk_receipts`
    FOREIGN KEY (`Receipt_Id`)
    REFERENCES `Receipts` (`Receipt_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `CToR_fk_customer_idx` ON `Customers_to_Receipts` (`Customer_Id` ASC) VISIBLE;

CREATE INDEX `CToR_fk_receipts_idx` ON `Customers_to_Receipts` (`Receipt_Id` ASC) VISIBLE;

CREATE UNIQUE INDEX `CToR_Id_UNIQUE` ON `Customers_to_Receipts` (`CToR_Id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Receipts_to_Products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Receipts_to_Products` ;

CREATE TABLE IF NOT EXISTS `Receipts_to_Products` (
  `RToP_Id` INT NOT NULL AUTO_INCREMENT,
  `Receipt_Id` INT NULL,
  `Product_Id` INT NULL,
  `quantity` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`RToP_Id`),
  CONSTRAINT `RToP_fk_receipts`
    FOREIGN KEY (`Receipt_Id`)
    REFERENCES `Receipts` (`Receipt_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RToP_fk_products`
    FOREIGN KEY (`Product_Id`)
    REFERENCES `Products` (`Product_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `RToP_fk_receipt_idx` ON `Receipts_to_Products` (`Receipt_Id` ASC) VISIBLE;

CREATE INDEX `RToP_fk_products_idx` ON `Receipts_to_Products` (`Product_Id` ASC) VISIBLE;

CREATE UNIQUE INDEX `RToP_Id_UNIQUE` ON `Receipts_to_Products` (`RToP_Id` ASC) VISIBLE;

GRANT ALL ON `RFID_store_db`.* TO 'myrs_user';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;





/********************************************************
* Insert sample data in rfid_store_db
*********************************************************/
-- Insert Customer into the schema
INSERT INTO Customers (Customer_Id,RFID_ID,password,e_mail,phone_number)VALUES
	(1, '16FEDA6FFC', AES_ENCRYPT('000000', 'rfid_keysting'), 'noah_1@gmail.com', '6191234567'),
	(2, '16FEDA6FFD', AES_ENCRYPT('000011', 'rfid_keysting'), 'william_2@gmail.com', '6191234568'),
	(3, '16FEDA6FFE', AES_ENCRYPT('000022', 'rfid_keysting'), 'james_3@gmail.com', '6191234569'),
	(4, '16FEDA6FFF', AES_ENCRYPT('000033', 'rfid_keysting'), 'logan_4@gmail.com', '6191234570'),
	(5, '16FEDA7000', AES_ENCRYPT('440000', 'rfid_keysting'), 'benjamin_5@gmail.com', '6191234571'),
	(6, '16FEDA7001', AES_ENCRYPT('550000', 'rfid_keysting'), 'mason_6@gmail.com', '6191234572'),
	(7, '16FEDA7002', AES_ENCRYPT('660000', 'rfid_keysting'), 'olivia_7@gmail.com', '6191234573'),
	(8, '16FEDA7003', AES_ENCRYPT('770000', 'rfid_keysting'), 'ava_8@gmail.com', '6191234574'),
	(9, '16FEDA7004', AES_ENCRYPT('880000', 'rfid_keysting'), 'isabella_9@gmail.com', '6191234575'),
	(10, '16FEDA7005', AES_ENCRYPT('990000', 'rfid_keysting'), 'sophia_10@gmail.com', '6191234576'),
	(11, '16FEDA7006', AES_ENCRYPT('111111', 'rfid_keysting'), 'mia_11@gmail.com', '6191234577'),
	(12, '16FEDA7007', AES_ENCRYPT('222222', 'rfid_keysting'), 'amelia_12@gmail.com', '6191234578')
;


-- Insert products into the schema
INSERT INTO Products (Product_Id ,product_name ,price ,ingredients ,category_Id ,NutritionFacts_Id ) VALUES
	(1, 'Bananas', 0.19, 'Banana', 1, 1),
	(2, '2% Milk - 1gal - Market Pantry', 2.49, 'Milk and Vitamin D3.CONTAINS: MILK', 1, 2),
	(3, 'Kroger Sweet & Mesquite BBQ Potato Chips', 1.35, 'Potatoes, Vegetable Oil, Seasoning (Sugar, Salt, Spices [Including Paprika], Dextrose, Corn Maltodextrin, Onion Powder, Torula Yeast, Tomato Powderâ€¦)', 1, 3),
	(4, 'Private Selection Extreme Chocolate Brownies', 6.99, 'Brownie Mix (Powdered Sugar, Sugar, Bleached Enriched Wheat Flour [Wheat Flour, Niacin, Reduced Iron, Thiamine Mononitrate, Riboflavin, Folic Acid], Soybean Oil, Cocoa [Processed with Alkali], Contains 2% or Less of the Following: Dried Egg Whites, Corn Syrup, Salt, Corn Starch, Leavening [Sodium Bicarbonate, Sodium Aluminum Phosphate], Caramel Color, Dextrose, Soy Flour, Nonfat Dry Milk, Natural and Artificial Flavors)', 1, 4),
	(5, 'Coca-Cola Classic Soda', 1.79, 'CARBONATED WATER, HIGH FRUCTOSE CORN SYRUP, CARAMEL COLOR, PHOSPHORIC ACID, NATURAL FLAVORS, CAFFEINE', 1, 5),
	(6, 'Oscar Mayer Deli Fresh Smoked Uncured Ham - 9oz', 3.99, 'ham, water, cultured dextrose, brown sugar, contains less than 2% of salt, vinegar, cultured celery juice, sodium phosphates, sugar, cherry powder, dextrose. autolyzed yeast extract, caramel color', 1, 6),
	(7, 'M&M Pretzel Chocolate Candies, 15.4 Oz.', 4.86, ' MILK CHOCOLATE (SUGAR, CHOCOLATE, SKIM MILK, COCOA BUTTER, LACTOSE, MILKFAT, SOY LECITHIN, SALT, ARTIFICIAL FLAVORS)', 1, 7),
	(8, 'Starbucks Doubleshot Energy Vanilla Flavor Coffee Drink, 11 Fl. Oz., 4 Count', 6.48, 'Starbucks Coffee (Water, Coffee), Reduced-Fat Milk, Skim Milk, Sugar, Maltodextrin, Dextrose, Taurine, Cellulose Gel, Natural Flavors, Panax Ginseng Root Extract, Inositol, Guarana', 1, 8),
	(9, 'Nutella Hazelnut Spread, 13 oz - Pack of 2', 6.98, 'Sugar, Palm Oil, Hazelnuts, Cocoa, Skim Milk, Whey (Milk), Lecithin As Emulsifier (Soy), Vanillin: An Artificial Flavor.', 1, 9),
	(10, 'Ruffles Sour Cream & Onion Potato Chips, 8.5 Oz.', 2.5, 'Potatoes, Vegetable Oil,Sour Cream & Onion Seasoning, Contains Milk Ingredients.', 1, 10),
	(11, 'Tide Plus Downy April Fresh High Efficiency Liquid Laundry Detergent - 92 fl oz', 11.99, 'Contains biodegradable surfactants (anionic and nonionic) and enzymes', 2, NULL),
	(12, 'Dawn Pure Essentials Dishwashing Liquid Dish Soap Lemon Essence - 24oz', 3.79, 'Water, Sodium, Lauramine Oxide, Alcohol Denatured', 2, NULL)
;

-- Insert Nutrition Facts into the schema
INSERT INTO NutritionFacts (NutritionFacts_Id, serving_size, serving_per_container,
	 calories, saturated_fat, trans_fat, sodium, potassium, cholesterol,
	 dietary_fiber, sugars) VALUES
		(1, 1, 1, 105, 0, 0, 1, 422, 0, 3, 14 ),
		(2, 8, 1, 150, 5, 3, 115, 37, 11, 0, 11 ),
		(3, 28, 10, 150, 1, 0, 15, 34, 0, 1, 2 ),
		(4, 113, 4, 420, 5, 0, 25, NULL, 5, 3, 58 ),
		(5, 12, 6, 140, 0, 0, 45, NULL, NULL, NULL, 44 ),
		(6, 2, 4.5, 50, 0.5, 0, 5, NULL, 25, NULL, 2 ),
		(7, 17, 12, 180, 2, 3.5, 0, 3500, 5, 1, 21 ),
		(8, 325, 4, 140, 1, 0, 115, 771, 10, 0, 8 ),
		(9, 37, 10, 200, 4, 0, 125, NULL, 0, 1, 21 ),
		(10, 1, 9, 150, 1.5, 0, 14, 326, 0, 1, 2 )
;


-- Insert Ways_to_pay into the schema
INSERT INTO Ways_to_pay( payment_way_Id, payment_way )VALUES
	( 1, 'Cash' ),
	( 2, 'Credit/Debit' )
;


-- Insert Categories into the schema
INSERT INTO Categories (category_Id,category) VALUES
	(1,'Grocery' ),
	(2,'Household'),
    (3,'Electronics' )
;


-- Insert a customer to a receipt into the schema
INSERT INTO customers_to_receipts (CToR_Id, Customer_Id, Receipt_Id) VALUES		
	( 1, 1, 1),	
	( 2, 2, 2),	
	( 3, 3, 3),	
	( 4, 4, 4),	
	( 5, 5, 5),	
	( 6, 6, 6),	
	( 7, 7, 7),	
	( 8, 8, 8),	
	( 9, 9, 9),	
	( 10, 10, 10)
;	


-- Insert a Receipts_to_Products into the schema
INSERT INTO Receipts_to_Products (RToP_Id, Receipt_Id,Product_Id,quantity )VALUES
	(1, 1, 1, 4),
	(11, 1, 2, 3),
	(21, 1, 3, 1),
	(2, 2, 2, 2),
	(12, 2, 3, 1),
	(22, 2, 5, 1),
	(3, 3, 3, 1),
	(13, 3, 4, 2),
	(4, 4, 4, 1),
	(14, 4, 5, 1),
	(5, 5, 5, 1),
	(15, 5, 6, 1),
	(6, 6, 6, 1),
	(16, 6, 7, 1),
	(7, 7, 7, 1),
	(17, 7, 8, 1),
	(8, 8, 8, 1),
	(18, 8, 9, 1),
	(9, 9, 9, 1),
	(19, 9, 1, 5),
	(10, 10, 10, 4),
	(20, 10, 12, 1),
	(23, 11, 4, 2),
	(24, 11, 9, 1),
	(25, 11, 11, 1),
	(26, 12, 8, 3)
;

-- Insert a Receipts into the schema

INSERT INTO Receipts (Receipt_Id, Customer_Id, sum_of_price, payment_way_Id, date) VALUES
	(1, 1, 9.58, 1, '2019/4/10'),
	(2, 2, 8.12, 1, '2019/4/11'),
	(3, 3, 15.33, 1, '2019/4/12'),
	(4, 4, 8.78, 1, '2019/4/13'),
	(5, 5, 5.78, 1, '2019/4/14'),
	(6, 6, 8.85, 1, '2019/4/15'),
	(7, 7, 11.84, 2, '2019/4/16'),
	(8, 8, 13.46, 2, '2019/4/17'),
	(9, 9, 7.93, 2, '2019/4/18'),
	(10, 10, 13.79, 2, '2019/4/19'),
	(11, 11, 32.95, 2, '2019/4/20'),
	(12, 12, 6.48, 2, '2019/4/21')
;